import cmath
import math
import random
from matplotlib import pyplot as plt
import numpy as np

x = [[1, 0, 1, 0],
     [1, 0, 0, 0],
     [0, 0, 0, 1],
     [0, 1, 0, 1]]

"""x = [[random.randint(1, 10) for i in range(0, 4)],
     [random.randint(1, 10) for i in range(0, 4)],
     [random.randint(1, 10) for i in range(0, 4)],
     [random.randint(1, 10) for i in range(0, 4)],
     [random.randint(1, 10) for i in range(0, 4)]]
"""

def weights(x, k = 2):
    return [[random.random() for i in range(len(x))] for j in range(k)]


def check(w, alpha):
    return any(i < alpha for i in w)


def new_weight(x, w, tay):
    w_new = []
    #print('\n')
    for i in x:
        #print(i)
        w_new.append(w + tay*(i - w))
    return w_new


def dD(x, w):
    d = 0
    for i in range(len(x)):
        d += (x[i] - w[i])**2
    return d


def self_organizing_network(x, w, tay, k=2, alpha = 0.001):
    xx = np.transpose(x)
    print(w)
    print('\n')
    for i in range(len(xx)):
        d_list = []
        for v in range(len(w)):
            d_list.append(dD(xx[i], w[v]))
        #print(f'{d_list}\n')
        if len(d_list) == 1:
            print(w)
            return w
        if d_list[0]<d_list[1]:
            w[0] = new_weight(xx[i], w[0][i], tay) #x[i]
        else:
            w[1] = new_weight(xx[i], w[1][i], tay)
    return w



ch = False
w = weights(x)
k = 0.95
tay = 1 #1
l = 50
#w = self_organizing_network(x, w, tay)
while True:
    w = self_organizing_network(x, w, tay)
    if len(w) == 1:
        print('1 class')
        break
    tay = tay*k
    #print(f'tay = {tay}')
    ch = []
    for i in range(2):
        ch.append(check(w[i], alpha=0.01))
    if True in ch:
        print(w)
        print('\n')
        new_elem = [1, 1, 1, 1]
        x.append(new_elem)
        for i in x:
            d_list = []
            for v in range(len(w)):
                d_list.append(dD(i, w[v]))
            if d_list[0]<d_list[1]:
                print(i)
                print(0)
            else:
                print(i)
                print(1)
        break
    if l<0:
        break
    l-=1


"""def draw(x, w):
    fig = plt.figure()
    ax = fig.add_subplot(111, projection='3d')
    ax.scatter(x, y, z, s=s)"""
